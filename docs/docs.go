// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/admin/group/{group-id}/event/{event-id}": {
            "delete": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Deletes a group event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminDeleteGroupEvent",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "group-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "event-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/admin/group/{group-id}/events": {
            "get": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Gives the group events.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminGetGroupEvents",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "group-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/group/{groupID}/posts": {
            "get": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "gets all posts for the desired group.",
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminGetGroupPosts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/rest.postResponse"
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/group/{groupId}/posts/{postId}": {
            "delete": {
                "security": [
                    {
                        "AppUserAuth": []
                    },
                    {
                        "APIKeyAuth": []
                    }
                ],
                "description": "Updates a post within the desired group.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminDeleteGroupPost",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/api/admin/group/{id}": {
            "delete": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Deletes a group.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminDeleteGroup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/admin/groups": {
            "get": {
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Gives the groups list. It can be filtered by category",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "GetAllGroups",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Category",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filtering by group's title - case insensitive",
                        "name": "title",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/getGroupsResponse"
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/user/login": {
            "get": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Logs in the user and refactor the user record and linked data if need",
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminLoginUser",
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/api/group-categories": {
            "get": {
                "security": [
                    {
                        "APIKeyAuth": []
                    }
                ],
                "description": "Gives all group categories.",
                "consumes": [
                    "application/json"
                ],
                "operationId": "GetGroupCategories",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/group/{group-id}/authman/synchronize": {
            "post": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Synchronizes Authman group. Only admin of the group could initiate the operation",
                "consumes": [
                    "text/plain"
                ],
                "operationId": "SynchAuthmanGroup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "group-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/api/group/{group-id}/event/{event-id}": {
            "delete": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Deletes a group event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "operationId": "DeleteGroupEvent",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "group-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "event-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/group/{group-id}/events": {
            "get": {
                "security": [
                    {
                        "AppUserAuth": []
                    },
                    {
                        "APIKeyAuth": []
                    }
                ],
                "description": "Gives the group events.",
                "consumes": [
                    "application/json"
                ],
                "operationId": "GetGroupEvents",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "group-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Updates a group event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "operationId": "UpdateGroupEvent",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/groupEventRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "group-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/group/{group-id}/events/v2": {
            "get": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Gives the group events.",
                "consumes": [
                    "application/json"
                ],
                "operationId": "GetGroupEventsV2",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "group-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Event"
                            }
                        }
                    }
                }
            }
        },
        "/api/group/{group-id}/members": {
            "post": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Adds a member to a group. The current user is required to be an admin of the group",
                "consumes": [
                    "text/plain"
                ],
                "operationId": "CreateMember",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/createMemberRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "group-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Deletes a member membership from a group",
                "consumes": [
                    "text/plain"
                ],
                "operationId": "DeleteMember",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "group-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfuly deleted",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/group/{group-id}/pending-members": {
            "post": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Creates a group pending member",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "operationId": "CreatePendingMember",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/createPendingMemberRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "group-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Deletes a group pending member",
                "consumes": [
                    "text/plain"
                ],
                "operationId": "DeletePendingMember",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "group-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfuly deleted",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/group/{groupID}/posts": {
            "get": {
                "security": [
                    {
                        "AppUserAuth": []
                    },
                    {
                        "APIKeyAuth": []
                    }
                ],
                "description": "gets all posts for the desired group.",
                "operationId": "GetGroupPosts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/rest.postResponse"
                            }
                        }
                    }
                }
            }
        },
        "/api/group/{groupId}/posts": {
            "post": {
                "security": [
                    {
                        "AppUserAuth": []
                    },
                    {
                        "APIKeyAuth": []
                    }
                ],
                "description": "creates a post within the desired group.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "operationId": "CreateGroupPost",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.postResponse"
                        }
                    }
                }
            }
        },
        "/api/group/{groupId}/posts/{postId}": {
            "put": {
                "security": [
                    {
                        "AppUserAuth": []
                    },
                    {
                        "APIKeyAuth": []
                    }
                ],
                "description": "Updates a post within the desired group.",
                "consumes": [
                    "application/json"
                ],
                "operationId": "UpdateGroupPost",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.postResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AppUserAuth": []
                    },
                    {
                        "APIKeyAuth": []
                    }
                ],
                "description": "Updates a post within the desired group.",
                "consumes": [
                    "application/json"
                ],
                "operationId": "DeleteGroupPost",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/api/group/{groupId}/posts/{postId}/report/abuse": {
            "put": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Reports an abusive group post",
                "consumes": [
                    "application/json"
                ],
                "operationId": "ReportAbuseGroupPost",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/api/group/{id}": {
            "delete": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Deletes a group.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "operationId": "DeleteGroup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/groups": {
            "get": {
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Gives the groups list. It can be filtered by category",
                "consumes": [
                    "application/json"
                ],
                "operationId": "GetGroups",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Category",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filtering by group's title (case-insensitive)",
                        "name": "title",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/getGroupsResponse"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Creates a group. The user must be part of urn:mace:uiuc.edu:urbana:authman:app-rokwire-service-policy-rokwire groups access. Title must be a unique. Category must be one of the categories list. Privacy can be public or private",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "operationId": "CreateGroup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/createGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/createResponse"
                        }
                    }
                }
            }
        },
        "/api/groups/{id}": {
            "get": {
                "security": [
                    {
                        "AppUserAuth": []
                    },
                    {
                        "APIKeyAuth": []
                    }
                ],
                "description": "Gives a group",
                "consumes": [
                    "application/json"
                ],
                "operationId": "GetGroup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/getGroupResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Updates a group.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "operationId": "UpdateGroup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateGroupRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/int/group/{identifier}": {
            "get": {
                "security": [
                    {
                        "IntAPIKeyAuth": []
                    }
                ],
                "description": "Retrieves group details and members",
                "consumes": [
                    "application/json"
                ],
                "operationId": "IntGetGroup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Identifier",
                        "name": "identifier",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Group"
                        }
                    }
                }
            }
        },
        "/api/int/user/{identifier}/groups": {
            "get": {
                "security": [
                    {
                        "IntAPIKeyAuth": []
                    }
                ],
                "description": "Gives the user groups memberships",
                "consumes": [
                    "application/json"
                ],
                "operationId": "IntGetUserGroupMemberships",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Identifier",
                        "name": "identifier",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.userGroupMembership"
                        }
                    }
                }
            }
        },
        "/api/memberships/{membership-id}": {
            "put": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Updates a membership. Only admin can update membership. Member is not allowed to update his/her own record.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "operationId": "UpdateMembership",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateMembershipRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Membership ID",
                        "name": "membership-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Deletes a membership",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "operationId": "DeleteMembership",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Membership ID",
                        "name": "membership-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/memberships/{membership-id}/approval": {
            "put": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Аpprove/Deny a membership",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "operationId": "MembershipApproval",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/membershipApprovalRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Membership ID",
                        "name": "membership-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/user": {
            "delete": {
                "security": [
                    {
                        "AppUserAuth": []
                    },
                    {
                        "APIKeyAuth": []
                    }
                ],
                "description": "Deletes a user with all the involved information from the Notifications BB (this includes - group membership \u0026 posts (and child posts - no matter of the creator))",
                "operationId": "DeleteUser",
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/api/user/group-memberships": {
            "get": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Gives the user groups memberships",
                "consumes": [
                    "application/json"
                ],
                "operationId": "GetUserGroupMemberships",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Identifier",
                        "name": "identifier",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.userGroupMembership"
                        }
                    }
                }
            }
        },
        "/api/user/groups": {
            "get": {
                "security": [
                    {
                        "AppUserAuth": []
                    },
                    {
                        "APIKeyAuth": []
                    }
                ],
                "description": "Gives the user groups.",
                "consumes": [
                    "application/json"
                ],
                "operationId": "GetUserGroups",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/getUserGroupsResponse"
                            }
                        }
                    }
                }
            }
        },
        "/api/user/login": {
            "get": {
                "security": [
                    {
                        "AppUserAuth": []
                    },
                    {
                        "APIKeyAuth": []
                    }
                ],
                "description": "Logs in the user and refactor the user record and linked data if need",
                "operationId": "LoginUser",
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/api/user/stats": {
            "get": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Gets user stat information. Responds with {\"posts_count\": xxx}",
                "operationId": "GetUserStats",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/getUserStatsResponse"
                        }
                    }
                }
            }
        },
        "/int/authman/synchronize": {
            "post": {
                "security": [
                    {
                        "IntAPIKeyAuth": []
                    }
                ],
                "description": "Synchronizes Authman groups memberhip",
                "consumes": [
                    "application/json"
                ],
                "operationId": "SynchronizeAuthman",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/synchronizeAuthmanRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/int/stats": {
            "get": {
                "security": [
                    {
                        "IntAPIKeyAuth": []
                    }
                ],
                "description": "Retrieve group stats",
                "consumes": [
                    "application/json"
                ],
                "operationId": "IntGroupStats",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GroupsStats"
                        }
                    }
                }
            }
        },
        "/version": {
            "get": {
                "description": "Gives the service version.",
                "produces": [
                    "text/plain"
                ],
                "operationId": "Version",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Creator": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "Event": {
            "type": "object",
            "properties": {
                "client_id": {
                    "type": "string"
                },
                "creator": {
                    "$ref": "#/definitions/Creator"
                },
                "date_created": {
                    "type": "string"
                },
                "event_id": {
                    "type": "string"
                },
                "group_id": {
                    "type": "string"
                },
                "to_members": {
                    "description": "nil or empty means everyone; non-empty means visible to those user ids and admins",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ToMember"
                    }
                }
            }
        },
        "Group": {
            "type": "object",
            "properties": {
                "attendance_group": {
                    "type": "boolean"
                },
                "authman_enabled": {
                    "type": "boolean"
                },
                "authman_group": {
                    "type": "string"
                },
                "block_new_membership_requests": {
                    "type": "boolean"
                },
                "can_join_automatically": {
                    "type": "boolean"
                },
                "category": {
                    "description": "one of the enums categories list",
                    "type": "string"
                },
                "client_id": {
                    "type": "string"
                },
                "date_created": {
                    "type": "string"
                },
                "date_updated": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "hidden_for_search": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Member"
                    }
                },
                "membership_questions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "only_admins_can_create_polls": {
                    "type": "boolean"
                },
                "privacy": {
                    "description": "public or private",
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "web_url": {
                    "type": "string"
                }
            }
        },
        "GroupStat": {
            "type": "object",
            "properties": {
                "authman_enabled": {
                    "type": "boolean"
                },
                "members_added_last_24": {
                    "type": "integer"
                },
                "members_count": {
                    "type": "integer"
                },
                "privacy": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "GroupsStats": {
            "type": "object",
            "properties": {
                "groups_count": {
                    "type": "integer"
                },
                "groups_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GroupStat"
                    }
                }
            }
        },
        "Member": {
            "type": "object",
            "properties": {
                "date_attended": {
                    "type": "string"
                },
                "date_created": {
                    "type": "string"
                },
                "date_updated": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "external_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "member_answers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MemberAnswer"
                    }
                },
                "name": {
                    "type": "string"
                },
                "net_id": {
                    "type": "string"
                },
                "photo_url": {
                    "type": "string"
                },
                "reject_reason": {
                    "type": "string"
                },
                "status": {
                    "description": "pending, member, admin, rejected",
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "MemberAnswer": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "string"
                },
                "question": {
                    "type": "string"
                }
            }
        },
        "ToMember": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "external_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "createGroupRequest": {
            "type": "object",
            "required": [
                "category",
                "privacy",
                "title"
            ],
            "properties": {
                "attendance_group": {
                    "type": "boolean"
                },
                "authman_enabled": {
                    "type": "boolean"
                },
                "authman_group": {
                    "type": "string"
                },
                "can_join_automatically": {
                    "type": "boolean"
                },
                "category": {
                    "type": "string"
                },
                "creator_email": {
                    "type": "string"
                },
                "creator_name": {
                    "type": "string"
                },
                "creator_photo_url": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "hidden_for_search": {
                    "type": "boolean"
                },
                "image_url": {
                    "type": "string"
                },
                "membership_questions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "only_admins_can_create_polls": {
                    "type": "boolean"
                },
                "privacy": {
                    "type": "string",
                    "enum": [
                        "public",
                        "private"
                    ]
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "web_url": {
                    "type": "string"
                }
            }
        },
        "createMemberRequest": {
            "type": "object",
            "properties": {
                "date_attended": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "external_id": {
                    "type": "string"
                },
                "member_answers": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "answer": {
                                "type": "string"
                            },
                            "question": {
                                "type": "string"
                            }
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "photo_url": {
                    "type": "string"
                },
                "status": {
                    "description": "pending, member, admin, rejected",
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "createPendingMemberRequest": {
            "type": "object",
            "properties": {
                "member_answers": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "answer": {
                                "type": "string"
                            },
                            "question": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "createResponse": {
            "type": "object",
            "properties": {
                "inserted_id": {
                    "type": "string"
                }
            }
        },
        "getGroupResponse": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "date_created": {
                    "type": "string"
                },
                "date_updated": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "date_created": {
                                "type": "string"
                            },
                            "date_updated": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "member_answers": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "answer": {
                                            "type": "string"
                                        },
                                        "question": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "name": {
                                "type": "string"
                            },
                            "photo_url": {
                                "type": "string"
                            },
                            "rejected_reason": {
                                "type": "string"
                            },
                            "status": {
                                "type": "string"
                            }
                        }
                    }
                },
                "membership_questions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "privacy": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "web_url": {
                    "type": "string"
                }
            }
        },
        "getGroupsResponse": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "date_created": {
                    "type": "string"
                },
                "date_updated": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "date_created": {
                                "type": "string"
                            },
                            "date_updated": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "member_answers": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "answer": {
                                            "type": "string"
                                        },
                                        "question": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "name": {
                                "type": "string"
                            },
                            "photo_url": {
                                "type": "string"
                            },
                            "rejected_reason": {
                                "type": "string"
                            },
                            "status": {
                                "type": "string"
                            }
                        }
                    }
                },
                "membership_questions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "privacy": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "web_url": {
                    "type": "string"
                }
            }
        },
        "getUserGroupsResponse": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "date_created": {
                    "type": "string"
                },
                "date_updated": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "date_created": {
                                "type": "string"
                            },
                            "date_updated": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "member_answers": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "answer": {
                                            "type": "string"
                                        },
                                        "question": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "name": {
                                "type": "string"
                            },
                            "photo_url": {
                                "type": "string"
                            },
                            "rejected_reason": {
                                "type": "string"
                            },
                            "status": {
                                "type": "string"
                            }
                        }
                    }
                },
                "membership_questions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "privacy": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "web_url": {
                    "type": "string"
                }
            }
        },
        "getUserStatsResponse": {
            "type": "object",
            "properties": {
                "posts_count": {
                    "type": "integer"
                }
            }
        },
        "groupEventRequest": {
            "type": "object",
            "required": [
                "event_id"
            ],
            "properties": {
                "event_id": {
                    "type": "string"
                },
                "to_members": {
                    "description": "nil or empty means everyone; non-empty means visible to those user ids and admins",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ToMember"
                    }
                }
            }
        },
        "membershipApprovalRequest": {
            "type": "object",
            "required": [
                "approve"
            ],
            "properties": {
                "approve": {
                    "type": "boolean"
                },
                "reject_reason": {
                    "type": "string"
                }
            }
        },
        "rest.postResponse": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "group_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "string"
                },
                "private": {
                    "type": "boolean"
                },
                "subject": {
                    "type": "string"
                }
            }
        },
        "rest.userGroupMembership": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "membership_status": {
                    "type": "string"
                },
                "privacy": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "synchronizeAuthmanRequestBody": {
            "type": "object",
            "properties": {
                "group_auto_create_stem_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "updateGroupRequest": {
            "type": "object",
            "required": [
                "category",
                "privacy",
                "title"
            ],
            "properties": {
                "attendance_group": {
                    "type": "boolean"
                },
                "authman_enabled": {
                    "type": "boolean"
                },
                "authman_group": {
                    "type": "string"
                },
                "block_new_membership_requests": {
                    "type": "boolean"
                },
                "can_join_automatically": {
                    "type": "boolean"
                },
                "category": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "hidden_for_search": {
                    "type": "boolean"
                },
                "image_url": {
                    "type": "string"
                },
                "membership_questions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "only_admins_can_create_polls": {
                    "type": "boolean"
                },
                "privacy": {
                    "type": "string",
                    "enum": [
                        "public",
                        "private"
                    ]
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "web_url": {
                    "type": "string"
                }
            }
        },
        "updateMembershipRequest": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "date_attended": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "member",
                        "admin"
                    ]
                }
            }
        }
    },
    "securityDefinitions": {
        "APIKeyAuth": {
            "type": "apiKey",
            "name": "ROKWIRE-API-KEY",
            "in": "header"
        },
        "AppUserAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header (add Bearer prefix to the Authorization value)"
        },
        "IntAPIKeyAuth": {
            "type": "apiKey",
            "name": "ROKWIRE_GS_API_KEY",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.5.31",
	Host:             "localhost",
	BasePath:         "/gr",
	Schemes:          []string{"https"},
	Title:            "Rokwire Groups Building Block API",
	Description:      "Rokwire Groups Building Block API Documentation.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
