// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/authman/synchronize": {
            "post": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Synchronizes Authman groups membership",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminSynchronizeAuthman",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/admin/group/events/v3": {
            "post": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Create a calendar event and link it to multiple group ids",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminCreateCalendarEventMultiGroup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.createCalendarEventMultiGroupData"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "group-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.createCalendarEventMultiGroupData"
                        }
                    }
                }
            }
        },
        "/api/admin/group/{group-id}/event/{event-id}": {
            "delete": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Deletes a group event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminDeleteGroupEvent",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "group-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "event-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/admin/group/{group-id}/events": {
            "get": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Gives the group events.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminGetGroupEvents",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "group-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/group/{group-id}/events/v3": {
            "put": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Updates a calendar event and for a single group id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminUpdateCalendarEventSingleGroup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "group id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.updateCalendarEventSingleGroupData"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "group-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.updateCalendarEventSingleGroupData"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Create a calendar event and link it to a single group id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminCreateCalendarEventSingleGroup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "group id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.createCalendarEventSingleGroupData"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "group-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.createCalendarEventSingleGroupData"
                        }
                    }
                }
            }
        },
        "/api/admin/group/{group-id}/events/v3/load": {
            "post": {
                "security": [
                    {
                        "AppUserAuth": []
                    },
                    {
                        "APIKeyAuth": []
                    }
                ],
                "description": "Gets the group calendar events",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminGetGroupCalendarEventsV3",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "group-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/GroupEventFilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/admin/group/{group-id}/members": {
            "get": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Gets the list of group members.",
                "consumes": [
                    "text/plain"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminGetGroupMembers",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MembershipFilter"
                        }
                    },
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "group-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GroupMembership"
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/group/{group-id}/stats": {
            "get": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Retrieves stats for a group by id",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminGetGroupStats",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "group-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GroupStats"
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/group/{groupID}/posts": {
            "get": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "gets all posts for the desired group.",
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminGetGroupPosts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "groupID",
                        "name": "groupID",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Values: message|post",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "asc|desc",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Post"
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/group/{groupId}/posts/{postId}": {
            "delete": {
                "security": [
                    {
                        "AppUserAuth": []
                    },
                    {
                        "APIKeyAuth": []
                    }
                ],
                "description": "Updates a post within the desired group.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminDeleteGroupPost",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/admin/group/{id}": {
            "delete": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Deletes a group.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminDeleteGroup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/admin/groups": {
            "get": {
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Gives the groups list. It can be filtered by category",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminGetAllGroups",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Deprecated - instead use request body filter! Filtering by group's title (case-insensitive)",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deprecated - instead use request body filter! category - filter by category",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deprecated - instead use request body filter! privacy - filter by privacy",
                        "name": "privacy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deprecated - instead use request body filter! offset - skip number of records",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deprecated - instead use request body filter! limit - limit the result",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deprecated - instead use request body filter! include_hidden - Includes hidden groups if a search by title is performed. Possible value is true. Default false.",
                        "name": "include_hidden",
                        "in": "query"
                    },
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GroupsFilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Group"
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/managed-group-configs": {
            "get": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Gets managed group configs",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminGetManagedGroupConfigs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ManagedGroupConfig"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Updates an existing managed group config",
                "consumes": [
                    "text/plain"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminUpdateManagedGroupConfig",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ManagedGroupConfig"
                        }
                    },
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Creates a new managed group config",
                "consumes": [
                    "text/plain"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminCreateManagedGroupConfig",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ManagedGroupConfig"
                        }
                    },
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ManagedGroupConfig"
                        }
                    }
                }
            }
        },
        "/api/admin/managed-group-configs/{id}": {
            "delete": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Deletes a managed group config",
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminDeleteManagedGroupConfig",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/admin/memberships/{membership-id}": {
            "put": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Updates a membership. Only the status can be changed.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminUpdateMembership",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateMembershipRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Membership ID",
                        "name": "membership-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Deletes a membership",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminDeleteMembership",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Membership ID",
                        "name": "membership-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/admin/sync-configs": {
            "get": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Gets sync config",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminGetSyncConfigs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.SyncConfig"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Saves sync config",
                "consumes": [
                    "text/plain"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminSaveSyncConfig",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.SyncConfig"
                        }
                    },
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/admin/user/event/{event-id}/groups": {
            "get": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Updates the group mappings for an event with id",
                "tags": [
                    "Client"
                ],
                "operationId": "UpdateGroupMappingsEventID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "event-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/getPutAdminGroupIDsForEventIDRequestAndResponse"
                        }
                    }
                }
            }
        },
        "/api/admin/user/event/{event_id}/groups": {
            "get": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Get all group IDs where the current user is an admin",
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminGetAdminGroupIDsForEventID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "event-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/getPutAdminGroupIDsForEventIDRequestAndResponse"
                        }
                    }
                }
            }
        },
        "/api/admin/user/groups": {
            "get": {
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Gives the groups list. It can be filtered by category",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminGetUserGroups",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Filtering by group's title (case-insensitive)",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "category - filter by category",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "privacy - filter by privacy",
                        "name": "privacy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "offset - skip number of records",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit - limit the result",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "include_hidden - Includes hidden groups if a search by title is performed. Possible value is true. Default false.",
                        "name": "include_hidden",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Group"
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/v2/groups": {
            "get": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Gives the groups list. It can be filtered by category, title and privacy. V2",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminGetGroupsV2",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Deprecated - instead use request body filter! Filtering by group's title (case-insensitive)",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deprecated - instead use request body filter! category - filter by category",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deprecated - instead use request body filter! privacy - filter by privacy",
                        "name": "privacy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deprecated - instead use request body filter! offset - skip number of records",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deprecated - instead use request body filter! limit - limit the result",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deprecated - instead use request body filter! include_hidden - Includes hidden groups if a search by title is performed. Possible value is true. Default false.",
                        "name": "include_hidden",
                        "in": "query"
                    },
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GroupsFilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Group"
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/v2/groups/{id}": {
            "get": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Gives a group. V2",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminGetGroup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Group"
                        }
                    }
                }
            }
        },
        "/api/admin/v2/user/groups": {
            "get": {
                "security": [
                    {
                        "AppUserAuth": []
                    },
                    {
                        "APIKeyAuth": []
                    }
                ],
                "description": "Gives the user groups. It can be filtered by category, title and privacy. V2.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminGetUserGroupsV2",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Deprecated - instead use request body filter! Filtering by group's title (case-insensitive)",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deprecated - instead use request body filter! category - filter by category",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deprecated - instead use request body filter! privacy - filter by privacy",
                        "name": "privacy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deprecated - instead use request body filter! offset - skip number of records",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deprecated - instead use request body filter! limit - limit the result",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deprecated - instead use request body filter! include_hidden - Includes hidden groups if a search by title is performed. Possible value is true. Default false.",
                        "name": "include_hidden",
                        "in": "query"
                    },
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GroupsFilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Group"
                            }
                        }
                    }
                }
            }
        },
        "/api/analytics/groups": {
            "get": {
                "security": [
                    {
                        "IntAPIKeyAuth": []
                    }
                ],
                "description": "Gets groups",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Analytics"
                ],
                "operationId": "AnalyticsGetGroups",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start date string - RFC3339 encoded",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End date string - RFC3339 encoded",
                        "name": "end_date",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/rest.analyticsGetGroupsResponse"
                            }
                        }
                    }
                }
            }
        },
        "/api/analytics/members": {
            "get": {
                "security": [
                    {
                        "IntAPIKeyAuth": []
                    }
                ],
                "description": "Gets groups members",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Analytics"
                ],
                "operationId": "AnalyticsGetGroupsMembers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "group_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Start date string - RFC3339 encoded",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End date string - RFC3339 encoded",
                        "name": "end_date",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/rest.analyticsGetGroupsMembersResponse"
                            }
                        }
                    }
                }
            }
        },
        "/api/analytics/posts": {
            "get": {
                "security": [
                    {
                        "IntAPIKeyAuth": []
                    }
                ],
                "description": "Gets posts",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Analytics"
                ],
                "operationId": "AnalyticsGetPosts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "group_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Start date string - RFC3339 encoded",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End date string - RFC3339 encoded",
                        "name": "end_date",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/rest.analyticsGetPostsResponse"
                            }
                        }
                    }
                }
            }
        },
        "/api/group/events/v3": {
            "post": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Create a calendar event and link it to multiple group ids",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "CreateCalendarEventMultiGroup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.createCalendarEventMultiGroupData"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "group-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.createCalendarEventMultiGroupData"
                        }
                    }
                }
            }
        },
        "/api/group/{group-id}/authman/synchronize": {
            "post": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Synchronizes Authman group. Only admin of the group could initiate the operation",
                "consumes": [
                    "text/plain"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "SynchAuthmanGroup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "group-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/group/{group-id}/event/{event-id}": {
            "delete": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Deletes a group event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "DeleteGroupEvent",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "group-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "event-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/group/{group-id}/events": {
            "get": {
                "security": [
                    {
                        "AppUserAuth": []
                    },
                    {
                        "APIKeyAuth": []
                    }
                ],
                "description": "Gives the group events.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "GetGroupEvents",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "group-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Updates a group event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "UpdateGroupEvent",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/groupEventRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "group-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Creates a group event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "CreateGroupEvent",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/groupEventRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "group-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/group/{group-id}/events/v2": {
            "get": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Gives the group events.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "GetGroupEventsV2",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "group-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Event"
                            }
                        }
                    }
                }
            }
        },
        "/api/group/{group-id}/events/v3": {
            "put": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Updates a calendar event and for a single group id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "UpdateCalendarEventSingleGroup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "group id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.updateCalendarEventSingleGroupData"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "group-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.updateCalendarEventSingleGroupData"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Create a calendar event and link it to a single group id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "CreateCalendarEventSingleGroup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "group id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.createCalendarEventSingleGroupData"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "group-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.createCalendarEventSingleGroupData"
                        }
                    }
                }
            }
        },
        "/api/group/{group-id}/events/v3/load": {
            "post": {
                "security": [
                    {
                        "AppUserAuth": []
                    },
                    {
                        "APIKeyAuth": []
                    }
                ],
                "description": "Gets the group calendar events",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "GetGroupCalendarEventsV3",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "group-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/GroupEventFilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/group/{group-id}/members": {
            "get": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Gets the list of group members. The result would be empty if the current user doesn't belong to the requested group.",
                "consumes": [
                    "text/plain"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "CreateMember",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MembershipFilter"
                        }
                    },
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "group-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GroupMembership"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Adds a member to a group. The current user is required to be an admin of the group",
                "consumes": [
                    "text/plain"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "CreateMember",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/createMemberRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "group-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Deletes a member membership from a group",
                "consumes": [
                    "text/plain"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "DeleteMember",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "group-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfuly deleted",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/group/{group-id}/pending-members": {
            "post": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Creates a group pending member",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "CreatePendingMember",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/createPendingMemberRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "group-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "423": {
                        "description": "Locked",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Deletes a group pending member",
                "consumes": [
                    "text/plain"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "DeletePendingMember",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "group-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfuly deleted",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/group/{group-id}/stats": {
            "get": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Retrieves stats for a group by id",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "GetGroupStats",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "group-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GroupStats"
                            }
                        }
                    }
                }
            }
        },
        "/api/group/{groupID}/posts": {
            "get": {
                "security": [
                    {
                        "AppUserAuth": []
                    },
                    {
                        "APIKeyAuth": []
                    }
                ],
                "description": "gets all posts for the desired group.",
                "tags": [
                    "Client"
                ],
                "operationId": "GetGroupPosts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "groupID",
                        "name": "groupID",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Values: message|post",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "asc|desc",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Post"
                            }
                        }
                    }
                }
            }
        },
        "/api/group/{groupId}/posts": {
            "post": {
                "security": [
                    {
                        "AppUserAuth": []
                    },
                    {
                        "APIKeyAuth": []
                    }
                ],
                "description": "creates a post within the desired group.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "CreateGroupPost",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Post"
                        }
                    }
                }
            }
        },
        "/api/group/{groupId}/posts/{postId}": {
            "get": {
                "security": [
                    {
                        "AppUserAuth": []
                    },
                    {
                        "APIKeyAuth": []
                    }
                ],
                "description": "Gets a post within the desired group.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "GetGroupPost",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Post"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AppUserAuth": []
                    },
                    {
                        "APIKeyAuth": []
                    }
                ],
                "description": "Updates a post within the desired group.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "UpdateGroupPost",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Post"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AppUserAuth": []
                    },
                    {
                        "APIKeyAuth": []
                    }
                ],
                "description": "Updates a post within the desired group.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "DeleteGroupPost",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/group/{groupId}/posts/{postId}/reactions": {
            "put": {
                "security": [
                    {
                        "AppUserAuth": []
                    },
                    {
                        "APIKeyAuth": []
                    }
                ],
                "description": "Reacts to a post within the desired group.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "ReactToGroupPost",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/group/{groupId}/posts/{postId}/report/abuse": {
            "put": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Reports an abusive group post",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "ReportAbuseGroupPost",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/reportAbuseGroupPostRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/group/{id}": {
            "delete": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Deletes a group.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "DeleteGroup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/groups": {
            "get": {
                "security": [
                    {
                        "APIKeyAuth": []
                    },
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Gives the groups list. It can be filtered by category",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "GetGroups",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Deprecated - instead use request body filter! Filtering by group's title (case-insensitive)",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deprecated - instead use request body filter! category - filter by category",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deprecated - instead use request body filter! privacy - filter by privacy",
                        "name": "privacy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deprecated - instead use request body filter! offset - skip number of records",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deprecated - instead use request body filter! limit - limit the result",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deprecated - instead use request body filter! include_hidden - Includes hidden groups if a search by title is performed. Possible value is true. Default false.",
                        "name": "include_hidden",
                        "in": "query"
                    },
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GroupsFilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Group"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Creates a group. The user must be part of urn:mace:uiuc.edu:urbana:authman:app-rokwire-service-policy-rokwire groups access. Title must be a unique. Category must be one of the categories list. Privacy can be public or private",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "CreateGroup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/createGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/createResponse"
                        }
                    }
                }
            }
        },
        "/api/groups/{id}": {
            "get": {
                "security": [
                    {
                        "AppUserAuth": []
                    },
                    {
                        "APIKeyAuth": []
                    }
                ],
                "description": "Gives a group",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "GetGroup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/getGroupResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Updates a group.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "UpdateGroup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateGroupRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/int/group/title/{title}/members": {
            "get": {
                "security": [
                    {
                        "IntAPIKeyAuth": []
                    }
                ],
                "description": "Retrieves group members by  title",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Internal"
                ],
                "operationId": "IntGetGroupMembersByGroupTitle",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Title",
                        "name": "identifier",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Offsetting result",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Limiting the result",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ShortMemberRecord"
                            }
                        }
                    }
                }
            }
        },
        "/api/int/group/{group-id}/date_updated": {
            "post": {
                "security": [
                    {
                        "IntAPIKeyAuth": []
                    }
                ],
                "description": "Updates the date updated field of the desired group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Internal"
                ],
                "operationId": "IntUpdateGroupDateUpdated",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "group-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/int/group/{group-id}/events": {
            "post": {
                "security": [
                    {
                        "IntAPIKeyAuth": []
                    }
                ],
                "description": "Creates a group event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Internal"
                ],
                "operationId": "IntCreateGroupEvent",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/intCreateGroupEventRequestBody"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "group-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/int/group/{group-id}/events/{event-id}": {
            "delete": {
                "security": [
                    {
                        "IntAPIKeyAuth": []
                    }
                ],
                "description": "Deletes a group event",
                "tags": [
                    "Internal"
                ],
                "operationId": "IntDeleteGroupEvent",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "group-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "event-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/int/group/{group-id}/notification": {
            "post": {
                "security": [
                    {
                        "IntAPIKeyAuth": []
                    }
                ],
                "description": "Sends a notification to members of a group",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Internal"
                ],
                "operationId": "SendGroupNotification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sendGroupNotificationRequestBody"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "group-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/int/group/{identifier}": {
            "get": {
                "security": [
                    {
                        "IntAPIKeyAuth": []
                    }
                ],
                "description": "Retrieves group details and members",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Internal"
                ],
                "operationId": "IntGetGroup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Identifier",
                        "name": "identifier",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Group"
                        }
                    }
                }
            }
        },
        "/api/int/user/{identifier}/groups": {
            "get": {
                "security": [
                    {
                        "IntAPIKeyAuth": []
                    }
                ],
                "description": "Gives the user groups memberships",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Internal"
                ],
                "operationId": "IntGetUserGroupMemberships",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Identifier",
                        "name": "identifier",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.userGroupShortDetail"
                        }
                    }
                }
            }
        },
        "/api/memberships/{membership-id}": {
            "put": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Updates a membership. Only admin can update the status and date_attended fields of a membership record. Member is allowed to update only his/her notification preferences.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "UpdateMembership",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateMembershipRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Membership ID",
                        "name": "membership-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Deletes a membership",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "DeleteMembership",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Membership ID",
                        "name": "membership-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/memberships/{membership-id}/approval": {
            "put": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Аpprove/Deny a membership",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "MembershipApproval",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/membershipApprovalRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Membership ID",
                        "name": "membership-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/research-profile/user-count": {
            "post": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Retrieves the user count matching the provided research profile",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "GetResearchProfileUserCount",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Research profile",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "/api/user": {
            "delete": {
                "security": [
                    {
                        "AppUserAuth": []
                    },
                    {
                        "APIKeyAuth": []
                    }
                ],
                "description": "Deletes a user with all the involved information from the Notifications BB (this includes - group membership \u0026 posts (and child posts - no matter of the creator))",
                "tags": [
                    "Client"
                ],
                "operationId": "DeleteUser",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/user/group-memberships": {
            "get": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Gives the user groups memberships",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "GetUserGroupMemberships",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Identifier",
                        "name": "identifier",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.userGroupShortDetail"
                        }
                    }
                }
            }
        },
        "/api/user/groups": {
            "get": {
                "security": [
                    {
                        "AppUserAuth": []
                    },
                    {
                        "APIKeyAuth": []
                    }
                ],
                "description": "Gives the user groups.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "GetUserGroups",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Deprecated - instead use request body filter! Filtering by group's title (case-insensitive)",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deprecated - instead use request body filter! category - filter by category",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deprecated - instead use request body filter! privacy - filter by privacy",
                        "name": "privacy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deprecated - instead use request body filter! offset - skip number of records",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deprecated - instead use request body filter! limit - limit the result",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deprecated - instead use request body filter! include_hidden - Includes hidden groups if a search by title is performed. Possible value is true. Default false.",
                        "name": "include_hidden",
                        "in": "query"
                    },
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GroupsFilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/getUserGroupsResponse"
                            }
                        }
                    }
                }
            }
        },
        "/api/user/login": {
            "get": {
                "security": [
                    {
                        "AppUserAuth": []
                    },
                    {
                        "APIKeyAuth": []
                    }
                ],
                "description": "Logs in the user and refactor the user record and linked data if need",
                "tags": [
                    "Client"
                ],
                "operationId": "LoginUser",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/user/stats": {
            "get": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Gets user stat information. Responds with {\"posts_count\": xxx}",
                "tags": [
                    "Client"
                ],
                "operationId": "GetUserStats",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/getUserStatsResponse"
                        }
                    }
                }
            }
        },
        "/api/v2/groups": {
            "get": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Gives the groups list. It can be filtered by category, title and privacy. V2",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "GetGroupsV2",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Deprecated - instead use request body filter! Filtering by group's title (case-insensitive)",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deprecated - instead use request body filter! category - filter by category",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deprecated - instead use request body filter! privacy - filter by privacy",
                        "name": "privacy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deprecated - instead use request body filter! offset - skip number of records",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deprecated - instead use request body filter! limit - limit the result",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deprecated - instead use request body filter! include_hidden - Includes hidden groups if a search by title is performed. Possible value is true. Default false.",
                        "name": "include_hidden",
                        "in": "query"
                    },
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GroupsFilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Group"
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/groups/{id}": {
            "get": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Gives a group. V2",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "GetGroupV2",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Group"
                        }
                    }
                }
            }
        },
        "/api/v2/user/groups": {
            "get": {
                "security": [
                    {
                        "AppUserAuth": []
                    },
                    {
                        "APIKeyAuth": []
                    }
                ],
                "description": "Gives the user groups. It can be filtered by category, title and privacy. V2.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "GetUserGroupsV2",
                "parameters": [
                    {
                        "type": "string",
                        "description": "APP",
                        "name": "APP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Deprecated - instead use request body filter! Filtering by group's title (case-insensitive)",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deprecated - instead use request body filter! category - filter by category",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deprecated - instead use request body filter! privacy - filter by privacy",
                        "name": "privacy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deprecated - instead use request body filter! offset - skip number of records",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deprecated - instead use request body filter! limit - limit the result",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deprecated - instead use request body filter! include_hidden - Includes hidden groups if a search by title is performed. Possible value is true. Default false.",
                        "name": "include_hidden",
                        "in": "query"
                    },
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GroupsFilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Group"
                            }
                        }
                    }
                }
            }
        },
        "/int/authman/synchronize": {
            "post": {
                "security": [
                    {
                        "IntAPIKeyAuth": []
                    }
                ],
                "description": "Synchronizes Authman groups membership",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Internal"
                ],
                "operationId": "SynchronizeAuthman",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/int/stats": {
            "get": {
                "security": [
                    {
                        "IntAPIKeyAuth": []
                    }
                ],
                "description": "Retrieve group stats",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Internal"
                ],
                "operationId": "IntGroupStats",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GroupsStats"
                        }
                    }
                }
            }
        },
        "/version": {
            "get": {
                "description": "Gives the service version.",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "Version",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "AccountIdentifiers": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string"
                },
                "external_id": {
                    "type": "string"
                }
            }
        },
        "Creator": {
            "type": "object",
            "required": [
                "email",
                "name",
                "user_id"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "Event": {
            "type": "object",
            "properties": {
                "client_id": {
                    "type": "string"
                },
                "creator": {
                    "$ref": "#/definitions/Creator"
                },
                "date_created": {
                    "type": "string"
                },
                "event_id": {
                    "type": "string"
                },
                "group_id": {
                    "type": "string"
                },
                "to_members": {
                    "description": "nil or empty means everyone; non-empty means visible to those user ids and admins",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ToMember"
                    }
                }
            }
        },
        "Group": {
            "type": "object",
            "properties": {
                "attendance_group": {
                    "type": "boolean"
                },
                "attributes": {
                    "type": "object",
                    "additionalProperties": true
                },
                "authman_enabled": {
                    "type": "boolean"
                },
                "authman_group": {
                    "type": "string"
                },
                "block_new_membership_requests": {
                    "type": "boolean"
                },
                "can_join_automatically": {
                    "type": "boolean"
                },
                "category": {
                    "description": "one of the enums categories list",
                    "type": "string"
                },
                "client_id": {
                    "type": "string"
                },
                "current_member": {
                    "description": "this is indicative and it's not required for update APIs",
                    "allOf": [
                        {
                            "$ref": "#/definitions/GroupMembership"
                        }
                    ]
                },
                "date_created": {
                    "type": "string"
                },
                "date_managed_membership_updated": {
                    "type": "string"
                },
                "date_membership_updated": {
                    "type": "string"
                },
                "date_updated": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "hidden_for_search": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Member"
                    }
                },
                "membership_questions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "only_admins_can_create_polls": {
                    "type": "boolean"
                },
                "privacy": {
                    "description": "public or private",
                    "type": "string"
                },
                "research_consent_details": {
                    "type": "string"
                },
                "research_consent_statement": {
                    "type": "string"
                },
                "research_description": {
                    "type": "string"
                },
                "research_group": {
                    "type": "boolean"
                },
                "research_open": {
                    "type": "boolean"
                },
                "research_profile": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "settings": {
                    "description": "TODO: Remove the pointer once the backward support is not needed any more!",
                    "allOf": [
                        {
                            "$ref": "#/definitions/GroupSettings"
                        }
                    ]
                },
                "stats": {
                    "$ref": "#/definitions/GroupStats"
                },
                "sync_end_time": {
                    "type": "string"
                },
                "sync_start_time": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "web_url": {
                    "type": "string"
                }
            }
        },
        "GroupEventFilter": {
            "type": "object",
            "properties": {
                "end_time_after": {
                    "type": "integer"
                },
                "end_time_before": {
                    "type": "integer"
                },
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "start_time_after": {
                    "type": "integer"
                },
                "start_time_after_null_end_time": {
                    "type": "integer"
                },
                "start_time_before": {
                    "type": "integer"
                },
                "start_time_before_null_end_time": {
                    "type": "integer"
                }
            }
        },
        "GroupMembership": {
            "type": "object",
            "properties": {
                "client_id": {
                    "type": "string"
                },
                "date_attended": {
                    "type": "string"
                },
                "date_created": {
                    "type": "string"
                },
                "date_updated": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "external_id": {
                    "type": "string"
                },
                "group_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "member_answers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MemberAnswer"
                    }
                },
                "name": {
                    "type": "string"
                },
                "net_id": {
                    "type": "string"
                },
                "notifications_preferences": {
                    "$ref": "#/definitions/NotificationsPreferences"
                },
                "photo_url": {
                    "type": "string"
                },
                "reject_reason": {
                    "type": "string"
                },
                "status": {
                    "description": "admin, pending, member, rejected",
                    "type": "string"
                },
                "sync_id": {
                    "description": "ID of sync that last updated this membership",
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "GroupSettings": {
            "type": "object",
            "properties": {
                "member_info_preferences": {
                    "$ref": "#/definitions/MemberInfoPreferences"
                },
                "post_preferences": {
                    "$ref": "#/definitions/PostPreferences"
                }
            }
        },
        "GroupStat": {
            "type": "object",
            "properties": {
                "authman_enabled": {
                    "type": "boolean"
                },
                "privacy": {
                    "type": "string"
                },
                "stats": {
                    "$ref": "#/definitions/GroupStats"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "GroupStats": {
            "type": "object",
            "properties": {
                "admins_count": {
                    "type": "integer"
                },
                "attendance_count": {
                    "type": "integer"
                },
                "member_count": {
                    "type": "integer"
                },
                "pending_count": {
                    "type": "integer"
                },
                "rejected_count": {
                    "type": "integer"
                },
                "total_count": {
                    "description": "pending and rejected are excluded",
                    "type": "integer"
                }
            }
        },
        "GroupsFilter": {
            "type": "object",
            "properties": {
                "attributes": {
                    "type": "object",
                    "additionalProperties": true
                },
                "authman_enabled": {
                    "type": "boolean"
                },
                "category": {
                    "description": "group category",
                    "type": "string"
                },
                "exclude_my_groups": {
                    "description": "Exclude My groups",
                    "type": "boolean"
                },
                "hidden": {
                    "description": "Filter by hidden flag. Values: true (show only hidden), false (show only not hidden), missing - don't do any filtering on this field.",
                    "type": "boolean"
                },
                "ids": {
                    "description": "membership id",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "include_hidden": {
                    "description": "Include hidden groups",
                    "type": "boolean"
                },
                "limit": {
                    "description": "result limit",
                    "type": "integer"
                },
                "member_external_id": {
                    "description": "member user external id",
                    "type": "string"
                },
                "member_id": {
                    "description": "member id",
                    "type": "string"
                },
                "member_user_id": {
                    "description": "member user id",
                    "type": "string"
                },
                "offset": {
                    "description": "result offset",
                    "type": "integer"
                },
                "order": {
                    "description": "order by category \u0026 name (asc desc)",
                    "type": "string"
                },
                "privacy": {
                    "description": "group privacy",
                    "type": "string"
                },
                "research_answers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "research_group": {
                    "type": "boolean"
                },
                "research_open": {
                    "type": "boolean"
                },
                "tags": {
                    "description": "group tags",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "description": "group title",
                    "type": "string"
                }
            }
        },
        "GroupsStats": {
            "type": "object",
            "properties": {
                "groups_count": {
                    "type": "integer"
                },
                "groups_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GroupStat"
                    }
                }
            }
        },
        "ManagedGroupConfig": {
            "type": "object",
            "properties": {
                "admin_uins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "authman_stems": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "client_id": {
                    "type": "string"
                },
                "date_created": {
                    "type": "string"
                },
                "date_updated": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "Member": {
            "type": "object",
            "properties": {
                "date_attended": {
                    "type": "string"
                },
                "date_created": {
                    "type": "string"
                },
                "date_updated": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "external_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "member_answers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MemberAnswer"
                    }
                },
                "name": {
                    "type": "string"
                },
                "net_id": {
                    "type": "string"
                },
                "photo_url": {
                    "type": "string"
                },
                "reject_reason": {
                    "type": "string"
                },
                "status": {
                    "description": "pending, member, admin, rejected",
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "MemberAnswer": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "string"
                },
                "question": {
                    "type": "string"
                }
            }
        },
        "MemberInfoPreferences": {
            "type": "object",
            "properties": {
                "allow_member_info": {
                    "type": "boolean"
                },
                "can_view_member_email": {
                    "type": "boolean"
                },
                "can_view_member_name": {
                    "type": "boolean"
                },
                "can_view_member_net_id": {
                    "type": "boolean"
                },
                "can_view_member_phone": {
                    "type": "boolean"
                }
            }
        },
        "MembershipFilter": {
            "type": "object",
            "properties": {
                "external_id": {
                    "description": "core user external id",
                    "type": "string"
                },
                "group_ids": {
                    "description": "list of group ids",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "description": "membership id",
                    "type": "string"
                },
                "limit": {
                    "description": "result limit",
                    "type": "integer"
                },
                "name": {
                    "description": "member's name",
                    "type": "string"
                },
                "net_id": {
                    "description": "core user net id",
                    "type": "string"
                },
                "offset": {
                    "description": "result offset",
                    "type": "integer"
                },
                "statuses": {
                    "description": "lest of membership statuses",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "user_id": {
                    "description": "core user id",
                    "type": "string"
                },
                "user_ids": {
                    "description": "core user ids",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "NotificationsPreferences": {
            "type": "object",
            "properties": {
                "all_mute": {
                    "type": "boolean"
                },
                "events_mute": {
                    "type": "boolean"
                },
                "invitations_mute": {
                    "type": "boolean"
                },
                "override_preferences": {
                    "type": "boolean"
                },
                "polls_mute": {
                    "type": "boolean"
                },
                "posts_mute": {
                    "type": "boolean"
                }
            }
        },
        "PostPreferences": {
            "type": "object",
            "properties": {
                "allow_send_post": {
                    "type": "boolean"
                },
                "can_send_post_reactions": {
                    "type": "boolean"
                },
                "can_send_post_replies": {
                    "type": "boolean"
                },
                "can_send_post_to_admins": {
                    "type": "boolean"
                },
                "can_send_post_to_all": {
                    "type": "boolean"
                },
                "can_send_post_to_specific_members": {
                    "type": "boolean"
                }
            }
        },
        "Sender": {
            "type": "object",
            "properties": {
                "type": {
                    "description": "user or system",
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/UserRef"
                }
            }
        },
        "ShortMemberRecord": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "external_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "net_id": {
                    "type": "string"
                },
                "status": {
                    "description": "pending, member, admin, rejected",
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "ToMember": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "external_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "UserRef": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "createGroupRequest": {
            "type": "object",
            "required": [
                "privacy",
                "title"
            ],
            "properties": {
                "attendance_group": {
                    "type": "boolean"
                },
                "attributes": {
                    "type": "object",
                    "additionalProperties": true
                },
                "authman_enabled": {
                    "type": "boolean"
                },
                "authman_group": {
                    "type": "string"
                },
                "can_join_automatically": {
                    "type": "boolean"
                },
                "category": {
                    "type": "string"
                },
                "creator_email": {
                    "type": "string"
                },
                "creator_name": {
                    "type": "string"
                },
                "creator_photo_url": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "hidden_for_search": {
                    "type": "boolean"
                },
                "image_url": {
                    "type": "string"
                },
                "membership_questions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "only_admins_can_create_polls": {
                    "type": "boolean"
                },
                "privacy": {
                    "type": "string",
                    "enum": [
                        "public",
                        "private"
                    ]
                },
                "research_consent_details": {
                    "type": "string"
                },
                "research_consent_statement": {
                    "type": "string"
                },
                "research_description": {
                    "type": "string"
                },
                "research_group": {
                    "type": "boolean"
                },
                "research_open": {
                    "type": "boolean"
                },
                "research_profile": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "settings": {
                    "$ref": "#/definitions/GroupSettings"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "web_url": {
                    "type": "string"
                }
            }
        },
        "createMemberRequest": {
            "type": "object",
            "properties": {
                "date_attended": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "external_id": {
                    "type": "string"
                },
                "member_answers": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "answer": {
                                "type": "string"
                            },
                            "question": {
                                "type": "string"
                            }
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "net_id": {
                    "type": "string"
                },
                "photo_url": {
                    "type": "string"
                },
                "status": {
                    "description": "pending, member, admin, rejected",
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "createPendingMemberRequest": {
            "type": "object",
            "properties": {
                "member_answers": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "answer": {
                                "type": "string"
                            },
                            "question": {
                                "type": "string"
                            }
                        }
                    }
                },
                "notifications_preferences": {
                    "$ref": "#/definitions/NotificationsPreferences"
                }
            }
        },
        "createResponse": {
            "type": "object",
            "properties": {
                "inserted_id": {
                    "type": "string"
                }
            }
        },
        "getGroupResponse": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "date_created": {
                    "type": "string"
                },
                "date_updated": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "date_created": {
                                "type": "string"
                            },
                            "date_updated": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "member_answers": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "answer": {
                                            "type": "string"
                                        },
                                        "question": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "name": {
                                "type": "string"
                            },
                            "photo_url": {
                                "type": "string"
                            },
                            "rejected_reason": {
                                "type": "string"
                            },
                            "status": {
                                "type": "string"
                            }
                        }
                    }
                },
                "membership_questions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "privacy": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "web_url": {
                    "type": "string"
                }
            }
        },
        "getPutAdminGroupIDsForEventIDRequestAndResponse": {
            "type": "object",
            "properties": {
                "group_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "getUserGroupsResponse": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "date_created": {
                    "type": "string"
                },
                "date_updated": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "date_created": {
                                "type": "string"
                            },
                            "date_updated": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "member_answers": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "answer": {
                                            "type": "string"
                                        },
                                        "question": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "name": {
                                "type": "string"
                            },
                            "photo_url": {
                                "type": "string"
                            },
                            "rejected_reason": {
                                "type": "string"
                            },
                            "status": {
                                "type": "string"
                            }
                        }
                    }
                },
                "membership_questions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "privacy": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "web_url": {
                    "type": "string"
                }
            }
        },
        "getUserStatsResponse": {
            "type": "object",
            "properties": {
                "posts_count": {
                    "type": "integer"
                }
            }
        },
        "groupEventRequest": {
            "type": "object",
            "required": [
                "event_id"
            ],
            "properties": {
                "event_id": {
                    "type": "string"
                },
                "to_members": {
                    "description": "nil or empty means everyone; non-empty means visible to those user ids and admins",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ToMember"
                    }
                }
            }
        },
        "intCreateGroupEventRequestBody": {
            "type": "object",
            "required": [
                "event_id"
            ],
            "properties": {
                "creator": {
                    "$ref": "#/definitions/Creator"
                },
                "event_id": {
                    "type": "string"
                },
                "to_members": {
                    "description": "nil or empty means everyone; non-empty means visible to those user ids and admins",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ToMember"
                    }
                }
            }
        },
        "membershipApprovalRequest": {
            "type": "object",
            "required": [
                "approve"
            ],
            "properties": {
                "approve": {
                    "type": "boolean"
                },
                "reject_reason": {
                    "type": "string"
                }
            }
        },
        "model.Post": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "client_id": {
                    "type": "string"
                },
                "date_created": {
                    "type": "string"
                },
                "date_notified": {
                    "type": "string"
                },
                "date_scheduled": {
                    "type": "string"
                },
                "date_updated": {
                    "type": "string"
                },
                "group_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "is_abuse": {
                    "type": "boolean"
                },
                "member": {
                    "$ref": "#/definitions/Creator"
                },
                "parent_id": {
                    "type": "string"
                },
                "private": {
                    "type": "boolean"
                },
                "reactions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "replies": {
                    "description": "This is constructed by the code (ParentID)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Post"
                    }
                },
                "subject": {
                    "type": "string"
                },
                "to_members": {
                    "description": "nil or empty means everyone; non-empty means visible to those user ids and admins",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ToMember"
                    }
                },
                "top_parent_id": {
                    "type": "string"
                },
                "use_as_notification": {
                    "type": "boolean"
                }
            }
        },
        "model.SyncConfig": {
            "type": "object",
            "properties": {
                "client_id": {
                    "type": "string"
                },
                "cron": {
                    "type": "string"
                },
                "group_timeout": {
                    "description": "Time from sync_start_time to be considered a failed run for a single group in minutes",
                    "type": "integer"
                },
                "time_threshold": {
                    "description": "Threshold from start_time to be considered same run in minutes",
                    "type": "integer"
                },
                "timeout": {
                    "description": "Time from start_time to be considered a failed run in minutes",
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "reportAbuseGroupPostRequestBody": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "send_to_dean": {
                    "type": "boolean"
                },
                "send_to_group_admins": {
                    "type": "boolean"
                }
            }
        },
        "rest.analyticsGetGroupsMembersResponse": {
            "type": "object",
            "properties": {
                "client_id": {
                    "type": "string"
                },
                "date_created": {
                    "type": "string"
                },
                "date_updated": {
                    "type": "string"
                },
                "group_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "rest.analyticsGetGroupsResponse": {
            "type": "object",
            "properties": {
                "authman_enabled": {
                    "type": "boolean"
                },
                "authman_group": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                },
                "client_id": {
                    "type": "string"
                },
                "date_created": {
                    "type": "string"
                },
                "date_updated": {
                    "type": "string"
                },
                "hidden_for_search": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "privacy": {
                    "type": "string"
                },
                "research_group": {
                    "type": "boolean"
                },
                "research_open": {
                    "type": "boolean"
                },
                "stats": {
                    "$ref": "#/definitions/GroupStats"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "rest.analyticsGetPostsResponse": {
            "type": "object",
            "properties": {
                "client_id": {
                    "type": "string"
                },
                "date_created": {
                    "type": "string"
                },
                "date_updated": {
                    "type": "string"
                },
                "group_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "member_user_id": {
                    "type": "string"
                }
            }
        },
        "rest.createCalendarEventMultiGroupData": {
            "type": "object",
            "properties": {
                "admins_identifiers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AccountIdentifiers"
                    }
                },
                "event": {
                    "type": "object",
                    "additionalProperties": true
                },
                "group_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "rest.createCalendarEventSingleGroupData": {
            "type": "object",
            "properties": {
                "event": {
                    "type": "object",
                    "additionalProperties": true
                },
                "to_members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ToMember"
                    }
                }
            }
        },
        "rest.updateCalendarEventSingleGroupData": {
            "type": "object",
            "properties": {
                "event": {
                    "type": "object",
                    "additionalProperties": true
                },
                "to_members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ToMember"
                    }
                }
            }
        },
        "rest.userGroupShortDetail": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "membership_status": {
                    "type": "string"
                },
                "privacy": {
                    "type": "string"
                },
                "research_group": {
                    "type": "boolean"
                },
                "research_open": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "sendGroupNotificationRequestBody": {
            "type": "object",
            "required": [
                "body",
                "subject"
            ],
            "properties": {
                "body": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "member_statuses": {
                    "description": "default: [\"admin\", \"member\"]",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserRef"
                    }
                },
                "sender": {
                    "$ref": "#/definitions/Sender"
                },
                "subject": {
                    "type": "string"
                },
                "topic": {
                    "type": "string"
                }
            }
        },
        "updateGroupRequest": {
            "type": "object",
            "required": [
                "privacy",
                "title"
            ],
            "properties": {
                "attendance_group": {
                    "type": "boolean"
                },
                "attributes": {
                    "type": "object",
                    "additionalProperties": true
                },
                "authman_enabled": {
                    "type": "boolean"
                },
                "authman_group": {
                    "type": "string"
                },
                "block_new_membership_requests": {
                    "type": "boolean"
                },
                "can_join_automatically": {
                    "type": "boolean"
                },
                "category": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "hidden_for_search": {
                    "type": "boolean"
                },
                "image_url": {
                    "type": "string"
                },
                "membership_questions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "only_admins_can_create_polls": {
                    "type": "boolean"
                },
                "privacy": {
                    "type": "string",
                    "enum": [
                        "public",
                        "private"
                    ]
                },
                "research_consent_details": {
                    "type": "string"
                },
                "research_consent_statement": {
                    "type": "string"
                },
                "research_description": {
                    "type": "string"
                },
                "research_group": {
                    "type": "boolean"
                },
                "research_open": {
                    "type": "boolean"
                },
                "research_profile": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "settings": {
                    "$ref": "#/definitions/GroupSettings"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "web_url": {
                    "type": "string"
                }
            }
        },
        "updateMembershipRequest": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "date_attended": {
                    "type": "string"
                },
                "notifications_preferences": {
                    "$ref": "#/definitions/NotificationsPreferences"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "member",
                        "admin"
                    ]
                }
            }
        }
    },
    "securityDefinitions": {
        "APIKeyAuth": {
            "type": "apiKey",
            "name": "ROKWIRE-API-KEY",
            "in": "header"
        },
        "AppUserAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header (add Bearer prefix to the Authorization value)"
        },
        "IntAPIKeyAuth": {
            "type": "apiKey",
            "name": "INTERNAL-API-KEY",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.29.0",
	Host:             "localhost",
	BasePath:         "/gr",
	Schemes:          []string{"http"},
	Title:            "Rokwire Groups Building Block API",
	Description:      "Rokwire Groups Building Block API Documentation.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
